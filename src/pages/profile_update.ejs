<div class="demo-card-square mdl-card mdl-shadow--2dp">
    <div class="mdl-card__title">
        <h2 class="mdl-card__title-text" id="cms" style="color: white">blokz/profile wizard</h2>
    </div>
    <div class="mdl-card__actions mdl-card--border " id="profileEdit">
            <!-- Circles which indicates the steps of the form: -->
    <div style="text-align:center;margin-top:5px;margin-bottom:20px;">
        <div class="step" style="text-align: center"><span class="mdl-chip mdl-color--red">
            <span class="mdl-chip__text">1</span>
        </span><br />Lookup</div>
        <div class="step" style="text-align: center"><span class="mdl-chip mdl-color--red">
            <span class="mdl-chip__text">2</span>
        </span><br />Edit</div>
        <div class="step" style="text-align: center"><span class="mdl-chip mdl-color--red">
            <span class="mdl-chip__text">3</span>
        </span><br />Finalize</div>
      </div>
    <!-- One "tab" for each step in the form: -->
    <div class="slider"> 
        <div class="mdl-textfield mdl-js-textfield">
            <small>Steem Username</small><input class="mdl-textfield__input" type="text" id="steemagent" onchange="steemagentUp()">
            <label class="mdl-textfield__label" for="username"></label>
        </div>
    </div>
    <div class="slider"><br />
        <div class="mdl-textfield mdl-js-textfield">
            <small>Real Name</small><input class="mdl-textfield__input" type="text" id="name">
            <label class="mdl-textfield__label" for="realname" id="nameLabel"></label>
        </div><br />
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Job/Self Title</small><input class="mdl-textfield__input" type="text" id="usertitle">
            <label class="mdl-textfield__label" for="usertitle" id="usertitleLabel"></label>
        </div><br />
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Birth Year</small><input class="mdl-textfield__input" type="text" id="birthyear">
            <label class="mdl-textfield__label" for="birthyear" id="birthyearLabel"></label>
        </div><br />
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Astrology Sign</small><input class="mdl-textfield__input" type="text" id="sign">
            <label class="mdl-textfield__label" for="sign" id="signLabel"></label>
        </div><br />
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Gender</small><input class="mdl-textfield__input" type="text" id="gender">
            <label class="mdl-textfield__label" for="gender" id="genderLabel"></label>
        </div><br />
        
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Interests (comma to seperate)</small><input class="mdl-textfield__input" type="text" id="interests">
            <label class="mdl-textfield__label" for="skills" id="interestsLabel"></label>
        </div><br />
        
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Location</small><input class="mdl-textfield__input" type="text" id="location">
            <label class="mdl-textfield__label" for="location" id="locationLabel"></label>
        </div><br />
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Favorite Users (comma to seperate)</small><input class="mdl-textfield__input" type="text" id="favorites">
            <label class="mdl-textfield__label" for="skills" id="favoritesLabel"></label>
        </div><br />
        
        
        <div class="mdl-textfield mdl-js-textfield">
          <small>Bio/About</small><textarea class="mdl-textfield__input" type="text" rows= "10" id="article" ></textarea>
            <label class="mdl-textfield__label" for="article" id="articleLabel"></label>
        </div>
    </div>
    <div class="slider" id="subbie">
        <div class="mdl-textfield mdl-js-textfield">
            <small>Private Posting Key:</small><input class="mdl-textfield__input" type="password" id="postingKey">
            <label class="mdl-textfield__label" for="postingKey"></label>
        </div>
    </div>
    <div style="overflow:auto;">
      <div style="float:right;">
        <button type="button" id="prevBtn" onclick="nextPrev(-1)">Previous</button>
        <button type="button" id="nextBtn" onclick="nextPrev(1)">Next</button>
      </div>
    </div>

 
</div>
</div>

<style>

    
    
    #regForm {
      background-color: #ffffff;
      margin: 100px auto;
      font-family: Raleway;
      padding: 40px;
      width: 70%;
      min-width: 300px;
    }
    
  
    
    input {
      padding: 10px;
      width: 100%;
      font-size: 17px;
      font-family: Raleway;
      border: 1px solid #aaaaaa;
    }
    
    /* Mark input boxes that gets an error on validation: */
    input.invalid {
      background-color: #ffdddd;
    }
    
    /* Hide all steps by default: */
    .slider {
      display: none;
      text-align: left;
    }
    
    button {
      background-color: #4CAF50;
      color: #ffffff;
      border: none;
      padding: 10px 20px;
      font-size: 17px;
      font-family: Raleway;
      cursor: pointer;
    }
    
    button:hover {
      opacity: 0.8;
    }
    
    #prevBtn {
      background-color: #bbbbbb;
    }
    
    /* Make circles that indicate the steps of the form: */
    .step {
      text-align: left;
      height: 15px;
      width: 20%;
      margin: 0 2px;
      display: inline-block;
      opacity: 0.2;
    }
    
    .step.active {
      opacity: 1;
    }
    
    /* Mark the steps that are finished and valid: */
    .step.finish {
      background-color: #000;
      width: 20%;
    }

    .demo-card-wide.mdl-card {
  width: 100%;
}
.demo-card-wide > .mdl-card__title {
  color: #fff;
  height: 176px;
  background: url('https://i.imgur.com/Gjr80cA.jpg') center / cover;
}
.demo-card-wide > .mdl-card__menu {
  color: #fff;
}

.profimg {

  border-radius: 50%;
  border: 1px solid #00adee;
}
    </style>
  <script>
  var currentTab = 0; // Current tab is set to be the first tab (0)
  showTab(currentTab); // Display the current tab
  
  function showTab(n) {
    // This function will display the specified tab of the form...
    var x = document.getElementsByClassName("slider");
    x[n].style.display = "block";
    //... and fix the Previous/Next buttons:
    if (n == 0) {
      document.getElementById("prevBtn").style.display = "none";
    } else {
      document.getElementById("prevBtn").style.display = "inline";
    }
    if (n == (x.length - 1)) {
      document.getElementById("nextBtn").innerHTML = "Post";
    } else {
      document.getElementById("nextBtn").innerHTML = "Next";
    }
    //... and run a function that will display the correct step indicator:
    fixStepIndicator(n)
  }
  
  function nextPrev(n) {
    // This function will figure out which tab to display
    var x = document.getElementsByClassName("slider");
    // Exit the function if any field in the current tab is invalid:
    if (n == 1 && !validateForm()) return false;
    // Hide the current tab:
    x[currentTab].style.display = "none";
    // Increase or decrease the current tab by 1:
    currentTab = currentTab + n;
    // if you have reached the end of the form...
    if (currentTab >= x.length) {
      // ... the form gets submitted:
      console.log("FORM SUBMITTED");
      updateProfile();
      document.getElementById("subbie").style.display = "none";
      document.getElementById("profileEdit").innerHTML = "Profile Update Submitted!";
      return false;
    }
    // Otherwise, display the correct tab:
    showTab(currentTab);
  }
  
  function validateForm() {
    // This function deals with validation of the form fields
    var x, y, i, valid = true;
    x = document.getElementsByClassName("slider");
    y = x[currentTab].getElementsByTagName("input");
    // A loop that checks every input field in the current tab:
    for (i = 0; i < y.length; i++) {
      // If a field is empty...
      if (y[i].value == "") {
        // add an "invalid" class to the field:
        y[i].className += " invalid";
        // and set the current valid status to false
        valid = false;
      }
    }
    // If the valid status is true, mark the step as finished and valid:
    if (valid) {
      document.getElementsByClassName("step")[currentTab].className += " finish";
    }
    return valid; // return the valid status
  }
  
  function fixStepIndicator(n) {
    // This function removes the "active" class of all steps...
    var i, x = document.getElementsByClassName("step");
    for (i = 0; i < x.length; i++) {
      x[i].className = x[i].className.replace(" active", "");
    }
    //... and adds the "active" class on the current step:
    x[n].className += " active";
  }



  steem.api.getAccounts(['sn0n'], function(err, result) {
    console.log(err, result); 
    profdata = JSON.parse(result[0].json_metadata);
    console.log(profdata);
    console.log(profdata.profile.cover_image);
    console.log(profdata.profile.profile_image);
    var x = document.createElement("IMG");
    document.getElementById("profimg").src = "https://cdn.steemitimages.com/DQmY7A3rS68r5GirqDT68uEa72rzUhdx7FB97Pxa7srrXR9/Snapchat-269414214.jpg";
});
  </script>

  


<script type="text/javascript" src="<%= site.basePath %>/js/steem.js?version=1.0_alphachips"></script>
